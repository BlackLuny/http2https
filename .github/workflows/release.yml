name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    name: Build Release - ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin_extension: ""
            cross: false
            
          - os_name: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin_extension: ""
            cross: true
            
          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin_extension: ""
            cross: true
            
          - os_name: Linux-aarch64-musl
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            bin_extension: ""
            cross: true
            
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin_extension: ".exe"
            cross: false
            
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin_extension: ""
            cross: false
            
          - os_name: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            bin_extension: ""
            cross: false

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install cross
        if: matrix.platform.cross
        run: |
          curl -L https://github.com/cross-rs/cross/releases/download/v0.2.5/cross-x86_64-unknown-linux-gnu.tar.gz | tar xz
          sudo mv cross /usr/local/bin/
        shell: bash

      - name: Build binary
        run: |
          if [ "${{ matrix.platform.cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.platform.target }}
          else
            cargo build --release --target ${{ matrix.platform.target }}
          fi
        shell: bash

      - name: Prepare artifacts
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar -czf ../../../http-to-https-proxy-${{ matrix.platform.os_name }}.tar.gz http-to-https-proxy${{ matrix.platform.bin_extension }}
        shell: bash

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./http-to-https-proxy-${{ matrix.platform.os_name }}.tar.gz
          asset_name: http-to-https-proxy-${{ matrix.platform.os_name }}.tar.gz
          asset_content_type: application/gzip
